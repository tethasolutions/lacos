// <auto-generated />
using System;
using Lacos.GestioneCommesse.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lacos.GestioneCommesse.Dal.Migrations
{
    [DbContext(typeof(LacosDbContext))]
    [Migration("20240510102507_aggiunta quarto stato tipi attività")]
    partial class aggiuntaquartostatotipiattività
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityTypeOperator", b =>
                {
                    b.Property<long>("ActivityTypesId")
                        .HasColumnType("bigint");

                    b.Property<long>("OperatorsId")
                        .HasColumnType("bigint");

                    b.HasKey("ActivityTypesId", "OperatorsId");

                    b.HasIndex("OperatorsId");

                    b.ToTable("OperatorsActivityTypes", "Registry");
                });

            modelBuilder.Entity("InterventionOperator", b =>
                {
                    b.Property<long>("InterventionsId")
                        .HasColumnType("bigint");

                    b.Property<long>("OperatorsId")
                        .HasColumnType("bigint");

                    b.HasKey("InterventionsId", "OperatorsId");

                    b.HasIndex("OperatorsId");

                    b.ToTable("InterventionOperators", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Activity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<DateTimeOffset?>("ExpirationDate")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Informations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewReferent")
                        .HasColumnType("bit");

                    b.Property<long>("JobId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReferentId")
                        .HasColumnType("bigint");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("StartDate")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("JobId");

                    b.HasIndex("ReferentId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TypeId");

                    b.ToTable("Activities", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.ActivityAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityAttachments", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.ActivityProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ProductId");

                    b.ToTable("ActivityProducts", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Intervention", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("CustomerSignatureFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerSignatureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<DateTimeOffset>("End")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("FinalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReportFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset?>("ReportGeneratedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<DateTimeOffset>("Start")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Interventions", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionDispute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long>("InterventionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InterventionId");

                    b.ToTable("InterventionDisputes", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long>("InterventionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InterventionId");

                    b.HasIndex("OperatorId");

                    b.ToTable("InterventionNotes", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long>("InterventionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityProductId");

                    b.HasIndex("InterventionId");

                    b.ToTable("InterventionProducts", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProductCheckList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long>("InterventionProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InterventionProductId")
                        .IsUnique();

                    b.ToTable("InterventionProductCheckLists", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProductCheckListItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AttachmentFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CheckListId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Outcome")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.HasIndex("OperatorId");

                    b.ToTable("InterventionProductCheckListItems", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProductPicture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("FileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("InterventionProductId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterventionProductId");

                    b.HasIndex("OperatorId");

                    b.ToTable("InterventionProductPictures", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<DateTimeOffset?>("ExpirationDate")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("HasHighPriority")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternalJob")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("JobDate")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReferentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ReferentId");

                    b.ToTable("Jobs", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.JobAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("JobId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobAttachments", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<DateTimeOffset>("Date")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("JobId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("JobId");

                    b.HasIndex("OperatorId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("TicketId");

                    b.ToTable("Messages", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.MessageNotification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<long>("MessageId")
                        .HasColumnType("bigint");

                    b.Property<long>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ReadDate")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("OperatorId");

                    b.ToTable("MessageNotfications", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<DateTimeOffset>("Date")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<DateTimeOffset?>("ExpectedDate")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("JobId")
                        .HasColumnType("bigint");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<long?>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("OperatorId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrderAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsAdminDocument")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderAttachments", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderItems", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<long?>("JobId")
                        .HasColumnType("bigint");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<long?>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("TicketDate")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("JobId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Tickets", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.TicketPicture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketPictures", "Docs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.ActivityType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ColorHex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("PictureRequired")
                        .HasColumnType("bit");

                    b.Property<string>("StatusLabel0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusLabel1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusLabel2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusLabel3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivityTypes", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainAddress")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Addresses", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.CheckList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ProductTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("CheckLists", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.CheckListItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CheckListId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.ToTable("CheckListItems", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("CanGenerateTickets")
                        .HasColumnType("bit");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FiscalType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Customers", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Operator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ColorHex")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long?>("DefaultVehicleId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SignatureFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DefaultVehicleId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Operators", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.OperatorDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OperatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("OriginalFilename")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.ToTable("OperatorDocuments", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConstructorName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool?>("HasPushBar")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("ProductTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("QrCodeNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("QrCodePrefix")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ReiType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VocType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.ProductDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OriginalFilename")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDocuments", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.ProductType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ColorHex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReiDoor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSparePart")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeletedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("DeletedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EditedById")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("EditedOn")
                        .HasPrecision(3)
                        .HasColumnType("datetimeoffset(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles", "Registry");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Security.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Users", "Security");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessToken = "a0f0a2ffd0f37c955fda023ed287c12fab375bfc0c3e58f96114c9eeb20066b0",
                            Enabled = true,
                            IsDeleted = false,
                            PasswordHash = "5d389939f8207210ff712c13f7fe683928cb4c2a5ace9b00fcfe2040be96bbb2",
                            Role = 0,
                            Salt = "f3064d73de0ca6b806ad24df65a59e1eb692393fc3f0b0297e37df522610b58b",
                            UserName = "administrator"
                        });
                });

            modelBuilder.Entity("ActivityTypeOperator", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.ActivityType", null)
                        .WithMany()
                        .HasForeignKey("ActivityTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", null)
                        .WithMany()
                        .HasForeignKey("OperatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterventionOperator", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Intervention", null)
                        .WithMany()
                        .HasForeignKey("InterventionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", null)
                        .WithMany()
                        .HasForeignKey("OperatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Activity", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Address", "Address")
                        .WithMany("Activities")
                        .HasForeignKey("AddressId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Job", "Job")
                        .WithMany("Activities")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Referent")
                        .WithMany()
                        .HasForeignKey("ReferentId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.ActivityType", "Type")
                        .WithMany("Activities")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Job");

                    b.Navigation("Referent");

                    b.Navigation("Supplier");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.ActivityAttachment", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Activity", "Activity")
                        .WithMany("Attachments")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.ActivityProduct", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Activity", "Activity")
                        .WithMany("ActivityProducts")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Product", "Product")
                        .WithMany("ActivityProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Intervention", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Activity", "Activity")
                        .WithMany("Interventions")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Vehicle", "Vehicle")
                        .WithMany("Interventions")
                        .HasForeignKey("VehicleId");

                    b.Navigation("Activity");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionDispute", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Intervention", "Intervention")
                        .WithMany("Disputes")
                        .HasForeignKey("InterventionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Intervention");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionNote", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Intervention", "Intervention")
                        .WithMany("Notes")
                        .HasForeignKey("InterventionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Operator")
                        .WithMany("InterventionNotes")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Intervention");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProduct", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.ActivityProduct", "ActivityProduct")
                        .WithMany("InterventionProducts")
                        .HasForeignKey("ActivityProductId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Intervention", "Intervention")
                        .WithMany("Products")
                        .HasForeignKey("InterventionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ActivityProduct");

                    b.Navigation("Intervention");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProductCheckList", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.InterventionProduct", "InterventionProduct")
                        .WithOne("CheckList")
                        .HasForeignKey("Lacos.GestioneCommesse.Domain.Docs.InterventionProductCheckList", "InterventionProductId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("InterventionProduct");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProductCheckListItem", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.InterventionProductCheckList", "CheckList")
                        .WithMany("Items")
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Operator")
                        .WithMany("InterventionProductCheckListItems")
                        .HasForeignKey("OperatorId");

                    b.Navigation("CheckList");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProductPicture", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.InterventionProduct", "InterventionProduct")
                        .WithMany("Pictures")
                        .HasForeignKey("InterventionProductId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Operator")
                        .WithMany("InterventionProductPictures")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("InterventionProduct");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Job", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Address", "Address")
                        .WithMany("Jobs")
                        .HasForeignKey("AddressId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Customer", "Customer")
                        .WithMany("Jobs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Referent")
                        .WithMany("Jobs")
                        .HasForeignKey("ReferentId");

                    b.Navigation("Address");

                    b.Navigation("Customer");

                    b.Navigation("Referent");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.JobAttachment", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Job", "Job")
                        .WithMany("Attachments")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Message", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Activity", "Activity")
                        .WithMany("Messages")
                        .HasForeignKey("ActivityId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Job", "Job")
                        .WithMany("Messages")
                        .HasForeignKey("JobId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Messages")
                        .HasForeignKey("PurchaseOrderId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Ticket", "Ticket")
                        .WithMany("Messages")
                        .HasForeignKey("TicketId");

                    b.Navigation("Activity");

                    b.Navigation("Job");

                    b.Navigation("Operator");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.MessageNotification", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Message", "Message")
                        .WithMany("MessageNotifications")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrder", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Job", "Job")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("JobId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Operator");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrderAttachment", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Attachments")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrderItem", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Product", "Product")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Ticket", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Customer", "Customer")
                        .WithMany("Tickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Job", "Job")
                        .WithMany("Tickets")
                        .HasForeignKey("JobId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.Navigation("Activity");

                    b.Navigation("Customer");

                    b.Navigation("Job");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.TicketPicture", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Docs.Ticket", "Ticket")
                        .WithMany("Pictures")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Address", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Supplier", "Supplier")
                        .WithMany("Addresses")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Customer");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.CheckList", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.ActivityType", "ActivityType")
                        .WithMany("CheckLists")
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.ProductType", "ProductType")
                        .WithMany("CheckLists")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ActivityType");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.CheckListItem", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.CheckList", "CheckList")
                        .WithMany("Items")
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("CheckList");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Customer", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Security.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Lacos.GestioneCommesse.Domain.Registry.Customer", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Operator", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Vehicle", "DefaultVehicle")
                        .WithMany("Operators")
                        .HasForeignKey("DefaultVehicleId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Security.User", "User")
                        .WithOne("Operator")
                        .HasForeignKey("Lacos.GestioneCommesse.Domain.Registry.Operator", "UserId");

                    b.Navigation("DefaultVehicle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.OperatorDocument", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Operator", "Operator")
                        .WithMany("Documents")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Product", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Customer", "Customer")
                        .WithMany("Products")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Customer");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.ProductDocument", b =>
                {
                    b.HasOne("Lacos.GestioneCommesse.Domain.Registry.Product", "Product")
                        .WithMany("Documents")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Activity", b =>
                {
                    b.Navigation("ActivityProducts");

                    b.Navigation("Attachments");

                    b.Navigation("Interventions");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.ActivityProduct", b =>
                {
                    b.Navigation("InterventionProducts");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Intervention", b =>
                {
                    b.Navigation("Disputes");

                    b.Navigation("Notes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProduct", b =>
                {
                    b.Navigation("CheckList");

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.InterventionProductCheckList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Job", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Attachments");

                    b.Navigation("Messages");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Message", b =>
                {
                    b.Navigation("MessageNotifications");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.PurchaseOrder", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Items");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Docs.Ticket", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.ActivityType", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("CheckLists");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Address", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.CheckList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Jobs");

                    b.Navigation("Products");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Operator", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("InterventionNotes");

                    b.Navigation("InterventionProductCheckListItems");

                    b.Navigation("InterventionProductPictures");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Product", b =>
                {
                    b.Navigation("ActivityProducts");

                    b.Navigation("Documents");

                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.ProductType", b =>
                {
                    b.Navigation("CheckLists");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Supplier", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Registry.Vehicle", b =>
                {
                    b.Navigation("Interventions");

                    b.Navigation("Operators");
                });

            modelBuilder.Entity("Lacos.GestioneCommesse.Domain.Security.User", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Operator");
                });
#pragma warning restore 612, 618
        }
    }
}
